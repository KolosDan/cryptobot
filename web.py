
# coding: utf-8
import telebot
import signal
from backend import *
from backend import _update
from pymongo import MongoClient
import sys
import time
from adminPanel import *
import time
from telebot import types
import cherrypy

token = ""
bot = telebot.TeleBot(token)
db = MongoClient('', username = '', password='',authSource='').
ico = ICO()
user_dict = {}
tr_dict = {}

WEBHOOK_HOST = ''
WEBHOOK_PORT = 443  
WEBHOOK_LISTEN = '0.0.0.0'

WEBHOOK_SSL_CERT = '/root/webbot/webhook_cert.pem'  
WEBHOOK_SSL_PRIV = '/root/webbot/webhook_pkey.pem' 

WEBHOOK_URL_BASE = "https://%s:%s" % (WEBHOOK_HOST, WEBHOOK_PORT)
WEBHOOK_URL_PATH = "/%s/" % (token)


class WebhookServer(object):
    @cherrypy.expose
    def index(self):
        if 'content-length' in cherrypy.request.headers and                         'content-type' in cherrypy.request.headers and                         cherrypy.request.headers['content-type'] == 'application/json':
            length = int(cherrypy.request.headers['content-length'])
            json_string = cherrypy.request.body.read(length).decode("utf-8")
            update = telebot.types.Update.de_json(json_string)
            bot.process_new_updates([update])
            return ''
        else:
            raise cherrypy.HTTPError(403)

@bot.message_handler(commands=['start'])
def start(message):
    if create_user(message.from_user.id,message.from_user.username) == False:
        bot.send_message(message.chat.id, "–û–π-–æ–π, –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –≤–∞—Å –≤ –±–∞–∑—É.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–∏–∞–ª–æ–≥ –∏ –∑–∞–π—Ç–∏ —Å–Ω–æ–≤–∞\n–ü—Ä–æ—Å—Ç–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞:(")
    keyboard = types.ReplyKeyboardMarkup()
    btn= types.InlineKeyboardButton(text="üë®üèª‚Äçüíª–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
    btn1 = types.InlineKeyboardButton(text="üíºICO –∫–ª—É–±")
    keyboard.row(btn,btn1)
    btn2= types.InlineKeyboardButton(text="üìà–¢–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    btn3= types.InlineKeyboardButton(text="üó£–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤")
    keyboard.row(btn2,btn3)
    btn4= types.InlineKeyboardButton(text="üéÅ–†–æ–∑—ã–≥—Ä—ã—à BTC")
    btn5= types.InlineKeyboardButton(text="üìñ–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π")
    keyboard.row(btn4,btn5)
    btn6= types.InlineKeyboardButton(text="üíµ–ü–æ–∫—É–ø–∫–∞ BTC")
    btn7= types.InlineKeyboardButton(text="üîå–ú–∞–π–Ω–∏–Ω–≥, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
    keyboard.row(btn6,btn7)
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, %s! –í –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ, —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:" % message.from_user.first_name,reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text=="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è –≤ ICO")
def createico(message):
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        icos = db.ico.find()
        keyboard = types.InlineKeyboardMarkup()
        for i in icos:
            keyboard.add(types.InlineKeyboardButton(text=i['ico'],callback_data=str(message.chat.id)+'_getcontr_'+i['ico']))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ ICO:",reply_markup=keyboard)
@bot.message_handler(func=lambda message: message.text=="–î–æ–±–∞–≤–∏—Ç—å ICO")
def createico(message):
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è ICO")
        bot.register_next_step_handler(message,ico_name)
        
def ico_name(message):
    ico.name = message.text
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ ICO")
    bot.register_next_step_handler(message,ico_description)
    
def ico_description(message):
    ico.description = message.text
    if create_ico(ico.name,ico.description) != False:
        bot.send_message(message.chat.id, "ICO –î–æ–±–∞–≤–ª–µ–Ω–æ!")
    else:
        bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –≤–æ–∑–º–æ–∂–Ω–æ —Ç–∞–∫–æ–π –ø—Ä–æ–µ–∫—Ç —É–∂–µ –µ—Å—Ç—å") 
        
@bot.message_handler(func=lambda message: message.text=="–û—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å ICO")
def lockico(message):
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        icos = db.ico.find()
        keyboard = types.InlineKeyboardMarkup()
        for i in icos:
            if i['locked'] == True:         
                keyboard.add(types.InlineKeyboardButton(text=i['ico']+'(–û—Ç–∫—Ä—ã—Ç–æ)',callback_data=str(message.chat.id)+'_lockico_'+i['ico']))
            else:
                keyboard.add(types.InlineKeyboardButton(text=i['ico']+'(–ó–∞–∫—Ä—ã—Ç–æ)',callback_data=str(message.chat.id)+'_lockico_'+i['ico']))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ ICO:",reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text=="–î–∞–ª–µ–µ ‚è©")
def forward(message):  
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        bot.send_message(message.chat.id, "–ú–µ–Ω—é 2",reply_markup=admin2(message.from_user.id))
@bot.message_handler(func=lambda message: message.text=="‚óÄÔ∏è–ù–∞–∑–∞–¥")
def back(message):
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        bot.send_message(message.chat.id, "–ú–µ–Ω—é",reply_markup=admin(message.from_user.id))
@bot.message_handler(func=lambda message: message.text=="–î–∞–ª–µ–µ‚ñ∂Ô∏è")
def forward2(message):
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        bot.send_message(message.chat.id, "–ú–µ–Ω—é 3",reply_markup=admin3(message.from_user.id))
@bot.message_handler(func=lambda message: message.text=="‚è™–ù–∞–∑–∞–¥")
def back2(message):  
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        bot.send_message(message.chat.id, "–ú–µ–Ω—é 2",reply_markup=admin2(message.from_user.id))
@bot.message_handler(func=lambda message: message.text=="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å ICO")
def icobalance(message):
    icos = db.ico.find()
    keyboard = types.InlineKeyboardMarkup()
    for i in icos:
        keyboard.add(types.InlineKeyboardButton(text=i['ico'],callback_data=str(message.chat.id)+'_icobalance_'+i['ico']))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ ICO:",reply_markup=keyboard)
@bot.message_handler(func=lambda message: message.text=="–í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ —Å ICO")
def transferFromIco(message):
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        icos = db.ico.find()
        keyboard = types.InlineKeyboardMarkup()
        for i in icos:
            keyboard.add(types.InlineKeyboardButton(text=i['ico'],callback_data=str(message.chat.id)+'_transferfrom_'+i['ico']))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ ICO:",reply_markup=keyboard)
    
@bot.message_handler(func=lambda message: message.text=="–ò–∑–º–µ–Ω–∏—Ç—å —ç–∫—Å–ø–µ—Ä—Ç-–∫–æ—à–µ–ª–µ–∫")
def updatexpert(message):
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        bot.send_message(message.chat.id, "–í–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å")
        bot.register_next_step_handler(message,updatexpert_2)
    
def updatexpert_2(message):
    if update_expert(message.text) != False:
        bot.send_message(message.chat.id, "–û–±–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    else:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    
@bot.message_handler(func=lambda message: message.text=="–ó–∞–¥–∞—Ç—å —ç–∫—Å–ø–µ—Ä—Ç-–∫–æ—à–µ–ª–µ–∫")
def addexpert(message):
    bot.send_message(message.chat.id, "–í–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å")
    bot.register_next_step_handler(message,addexpert_2)
    
def addexpert_2(message):
    if add_expert(message.text) != False:
        bot.send_message(message.chat.id, "–ê–¥—Ä–µ—Å –∏–∑–º–µ–Ω–µ–Ω")
    else:
        bot.send_message(message.chat.id, "–ö–æ—à–µ–ª–µ–∫ —É–∂–µ —Å–æ–∑–¥–∞–Ω")

@bot.message_handler(func=lambda message: message.text=="–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ –º–æ–¥–µ–ª–∏ B")
def changeModelB(message):
    data = db.user.find_one({"id":int(message.from_user.id)})
    if data['is_admin'] == True:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫")
        bot.register_next_step_handler(message,changeModelB_step2)
def changeModelB_step2(message):
    update_modelb(message.text)
    bot.send_message(message.chat.id, "–ö–æ—à–µ–ª–µ–∫ –∏–∑–º–µ–Ω–µ–Ω")
    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤—ã –ù–ï —Å–º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Å —ç—Ç–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞")


@bot.message_handler(func=lambda message: message.text=="‚ÅâÔ∏è –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã")
def answers(message):
    keyboard = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(text="1.–ü–æ—á–µ–º—É –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å—Ç–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?", callback_data=str(message.chat.id)+"_q_1")
    btn1= types.InlineKeyboardButton(text="2.–ö–∞–∫ —è –º–æ–≥—É –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω —á—Ç–æ –≤—ã –Ω–µ –º–æ—à–µ–Ω–Ω–∏–∫–∏?", callback_data=str(message.chat.id)+"_q_2")
    btn2= types.InlineKeyboardButton(text="3.–°–∫–æ–ª—å–∫–æ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ?", callback_data=str(message.chat.id)+"_q_3")
    btn3= types.InlineKeyboardButton(text="4.–ß—Ç–æ –µ—Å–ª–∏ —è –Ω–µ –º–æ–≥—É —Å–µ–±–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?",callback_data=str(message.chat.id)+"_q_4")
    btn4= types.InlineKeyboardButton(text="5.–ù–∞ –∫–∞–∫–æ–π –±–∏—Ä–∂–µ —è –¥–æ–ª–∂–µ–Ω —Ç–æ—Ä–≥–æ–≤–∞—Ç—å? ",callback_data=str(message.chat.id)+"_q_5")
    btn5= types.InlineKeyboardButton(text="6.–ù–∞ —á–µ–º –≤—ã –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç–µ —Å–≤–æ–∏ —Å–∏–≥–Ω–∞–ª—ã?",callback_data=str(message.chat.id)+"_q_6")
    btn6= types.InlineKeyboardButton(text="7.–ß—Ç–æ –µ—Å–ª–∏ —É –º–µ–Ω—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?",callback_data=str(message.chat.id)+"_q_7")
    keyboard.row(btn)
    keyboard.row(btn1)
    keyboard.row(btn2)
    keyboard.row(btn3)
    keyboard.row(btn4)
    keyboard.row(btn5)
    keyboard.row(btn6)
    bot.send_message(message.chat.id, "–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã",reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text=="ü§ù –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è!")
def tkpart(message):
    keyboard = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(text="ü•â 2—Ö –Ω–µ–¥–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞", callback_data=str(message.chat.id) + "_subscr_2")
    btn1= types.InlineKeyboardButton(text="ü•à –ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞", callback_data=str(message.chat.id) +"_subscr_1")
    btn2= types.InlineKeyboardButton(text="ü•á –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 6–º", callback_data=str(message.chat.id) +"_subscr_6")
    btn3= types.InlineKeyboardButton(text="üèÜ –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞", callback_data=str(message.chat.id) +"_subscr_inf")
    keyboard.row(btn,btn1)
    keyboard.row(btn2,btn3)
    bot.send_message(message.chat.id, """–û—Ç–ª–∏—á–Ω–æ. –£ –Ω–∞—Å –µ—Å—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —É—á–∞—Å—Ç–∏—è.

–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã:
ü•â0.19 ETH - 2—Ö –Ω–µ–¥–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
ü•à0.3 –ï–¢–ù - –º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
ü•á1.8 –ï–¢–ù - –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 6–º
üèÜ2.5 –ï–¢–ù - –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞

–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–µ–±–µ –ø–∞–∫–µ—Ç –∏ –Ω–∞—á–Ω–µ–º.""",reply_markup=keyboard)
    

@bot.message_handler(func=lambda message: message.text=="ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞")
def referal(message):
    bot.send_message(message.chat.id, """ –í—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –Ω–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã  –∏ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø.
 –î–ª—è —Ç–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ 1 –º–µ—Å—è—Ü –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 3—Ö –¥—Ä—É–∑–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–ª–∞—Ç—è—Ç –ø–æ–¥–ø–∏—Å–∫—É. –ù–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞- 5 –¥—Ä—É–∑–µ–π. 

–ß—Ç–æ –±—ã –º—ã –º–æ–≥–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Å –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º c —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –≤–∞–º–∏ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É.  
@Uji_y @VivereEstVincere @razdva34""")

@bot.message_handler(func=lambda message: message.text=="–í–æ–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–æ–≤")
def customerQ(message):
    keybd = types.InlineKeyboardMarkup()
    for i in db.answer.find():
        b = types.InlineKeyboardButton(text="–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=str(message.chat.id) + "_answer_"+str(i['username']))
        keybd.row(b)
        bot.send_message(message.chat.id,"*"+str(i["username"])+"*",parse_mode="Markdown")
        bot.send_message(message.chat.id, i["question"],reply_markup=keybd)
@bot.message_handler(func=lambda message: message.text=="üë®üèª‚Äçüíª–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
def cabinet(message):
    keybd = types.InlineKeyboardMarkup()
    data = db.user.find_one({"id":int(message.from_user.id)})
    try:
        if data['is_admin'] == True:
            admin_button = types.InlineKeyboardButton(text="–ê–¥–º–∏–Ω–∫–∞", callback_data=str(message.chat.id) + "_admin")
            keybd.row(admin_button)
    except:
        bot.send_message(message.chat.id, "–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—Å–µ –ø–ª–æ—Ö–æ, –Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ\n–ï—Å–ª–∏ —É –≤–∞—Å —Å–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ @artyemk –∏–ª–∏ @kolosyamba")
    b = types.InlineKeyboardButton(text="üí≥ ETH –∫–æ—à–µ–ª–µ–∫", callback_data=str(message.chat.id) + "_eth")
    b3= types.InlineKeyboardButton(text="üïì –ò—Å—Ç–æ—Ä–∏—è", callback_data=str(message.chat.id) +"_history")
    b4 = types.InlineKeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data=str(message.chat.id) + "_deposit")
    keybd.row(b,b3)
    keybd.row(b4)
    if data['is_expert'] == False:
        bot.send_message(message.chat.id, """üë®üèª‚Äçüíª –ö–∞–±–∏–Ω–µ—Ç
                                            \nüîë –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –Ω–∞—à–µ–≥–æ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ Private Crypto.\n–î–ª—è –≤–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è –Ω–∞ ICO –∫–ª—É–±.\n–î–ª—è –≤–∞—Å –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞ –Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞.\n–î–ª—è –≤–∞—Å –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞ –Ω–∞ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª —Å —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.
                                            \nüÜî –í–∞—à id –∫–ª–∏–µ–Ω—Ç–∞: %s
                                            \nüíµ –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ: %s Eth""" % (data["id"],get_balance(message.from_user.id)),reply_markup=keybd)
    else:
        bot.send_message(message.chat.id, """üèª‚Äçüíª –ö–∞–±–∏–Ω–µ—Ç
                                            üîë –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –Ω–∞—à–µ–≥–æ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ Private Crypto.\n‚úÖ–î–ª—è –≤–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç –æ—Å–æ–±–∞—è –∫–æ–º–∏—Å—Å–∏—è –Ω–∞ ICO –∫–ª—É–±.\n‚úÖ–î–ª—è –≤–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞ –Ω–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞.\n‚úÖ–î–ª—è –≤–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞ –Ω–∞ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª —Å —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.
                                            \nüÜî –í–∞—à id –∫–ª–∏–µ–Ω—Ç–∞: %s
                                            \nüíµ –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –≤ –∫–∞–±–∏–Ω–µ—Ç–µ: %s Eth""" % (data["id"],get_balance(message.from_user.id)),reply_markup=keybd)

@bot.message_handler(func=lambda message: message.text=="üó£–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤")
def private(message):
    bot.send_message(message.chat.id, """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!‚úåÔ∏è 

–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤:
0.2 ETH / –º–µ—Å—è—Ü
1 ETH / –Ω–∞–≤—Å–µ–≥–¥–∞

–í –ø—Ä–∏–≤–∞—Ç–Ω–æ–º –∫–∞–Ω–∞–ª–µ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—â–∞—Ç—å—Å—è —Å –ª—é–¥—å–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–≤–Ω–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–º —Ä—ã–Ω–∫–µ –∏ –∏–º–µ—é—Ç —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å –≤ —Ç–∞–∫–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö –∫–∞–∫ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –º–æ–Ω–µ—Ç, —É—Å–ø–µ—à–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ ICO, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫—á–µ–π–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –ø—Ä–æ—á–µ–µ‚ùóÔ∏è 

–ü–æ–ª—å–∑–∞ —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ –≤ –∫–∞–Ω–∞–ª–µ —Å–æ–∑–¥–∞–Ω–∞ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –±—ã –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–≥ –¥—Ä—É–≥–æ–º—É. –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ –±—ã–ª–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ —Ç–∞–∫–∞—è —Ü–µ–Ω–∞, –æ—Ç—Å–µ–∏–≤–∞—é—â–∞—è –Ω–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã—Ö –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–º —Ä–∞–∑–≤–∏—Ç–∏–∏ –ª—é–¥–µ–π. üî•

‚ùì–í —á–µ–º –Ω–∞—à–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞

‚ùóÔ∏è–û—Ñ–æ—Ä–º–ª—è—é –ø–æ–¥–ø–∏—Å–∫—É –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –Ω–∞ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏:
 - –æ–±—É—á–µ–Ω–∏–µ. 
 - –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞. 
 - –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç. 
 - —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. 
 - —É—Å–ª—É–≥–∏ –º–∞–π–Ω–∏–Ω–≥ –æ—Ç–µ–ª—è. 
 - –ø–æ–∫—É–ø–∫–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã. 

‚ÄºÔ∏è –ú—ã –æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —á–∞—Ç–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤. –° –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞—à–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º @razdva34 @VivereEstVincere @Uji_y 

‚úÖ –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ–ø–ª–∞—Ç—ã:
1. –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ 0.2 –ï–¢–ù (–∏–ª–∏ 1 –ï–¢–ù –¥–ª—è –±–µ—Å—Å—Ä–æ—á–Ω–æ–π) –Ω–∞ —ç—Ñ–∏—Ä–∏—É–º-–∫–æ—à–µ–ª–µ–∫ 
0x264368C1D36d08715053D235426532d2177dDFd3
2. –ö–æ–º–∏—Å—Å–∏—é –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ –≤—ã, –Ω–∞ –Ω–∞—à –∫–æ—à–µ–ª–µ–∫ –¥–æ–ª–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å –∏–º–µ–Ω–Ω–æ 0.2 –ï–¢–ù (–∏–ª–∏ 1 –ï–¢–ù –¥–ª—è –±–µ—Å—Å—Ä–æ—á–Ω–æ–π)
3. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—à–µ–ª–µ–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å—É–º–º—É.
4. –ü—Ä–∏—Å—ã–ª–∞–µ—Ç–µ –Ω–∞–º ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (TxID; Transaction ID; Hash)
5. –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Å–µ—Ç—å ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –≤–∞—Å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª. –≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 24 —á–∞—Å–æ–≤, –æ–±—ã—á–Ω–æ —á–µ—Ä–µ–∑ 1-2 —á–∞—Å–∞ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å –ø—Ä–æ—Ñ–∏—Ç –≤–º–µ—Å—Ç–µ ‚úÖüòé""") 
    
@bot.message_handler(func=lambda message: message.text=="üíºICO –∫–ª—É–±")
def ICO(message):
    keyboard = types.ReplyKeyboardMarkup()
    btn = types.InlineKeyboardButton(text="ü§ù –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ")
    btn1= types.InlineKeyboardButton(text="üèÜ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–ª—É–±–∞")
    keyboard.row(btn,btn1)
    btn2= types.InlineKeyboardButton(text="–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã")
    btn3= types.InlineKeyboardButton(text="üìñ–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π ICO")
    keyboard.row(btn2,btn3)
    btn4= types.InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    keyboard.row(btn4)
    bot.send_message(message.chat.id, """üíº ICO –∫–ª—É–± ‚Äî —ç—Ç–æ –±—ã—Å—Ç—Ä—ã–π –∏ —É–¥–æ–±–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –≤ ICO.
–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ª—É—á—à–∏–µ –ø—Ä–æ–µ–∫—Ç—ã, –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã–µ –Ω–∞—à–∏–º–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞–º–∏ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –∏ —Å —É—á–µ—Ç–æ–º –¥—Ä—É–≥–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Ä—ã–Ω–∫–∞ (—Ä–µ–π—Ç–∏–Ω–≥–∏, –ª–∏–¥–µ—Ä—ã –º–Ω–µ–Ω–∏–π), –Ω–∞ —Å–∞–º—ã—Ö –≤—ã–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.
\n‚ö†Ô∏è –ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–æ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º.
\nüîë –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ üó£ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤""",reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text=="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def startmenu(message):
    keyboard = types.ReplyKeyboardMarkup()
    btn= types.InlineKeyboardButton(text="üë®üèª‚Äçüíª–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
    btn1 = types.InlineKeyboardButton(text="üíºICO –∫–ª—É–±")
    keyboard.row(btn,btn1)
    btn2= types.InlineKeyboardButton(text="üìà–¢–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    btn3= types.InlineKeyboardButton(text="üó£–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤")
    keyboard.row(btn2,btn3)
    btn4= types.InlineKeyboardButton(text="üéÅ–†–æ–∑—ã–≥—Ä—ã—à BTC")
    btn5= types.InlineKeyboardButton(text="üìñ–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π")
    keyboard.row(btn4,btn5)
    btn6= types.InlineKeyboardButton(text="üíµ–ü–æ–∫—É–ø–∫–∞ BTC")
    btn7= types.InlineKeyboardButton(text="üîå–ú–∞–π–Ω–∏–Ω–≥, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
    keyboard.row(btn6,btn7)
    bot.send_message(message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=keyboard)
    
@bot.message_handler(func=lambda message: message.text=="üîå–ú–∞–π–Ω–∏–Ω–≥, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
def mining(message):
    bot.send_message(message.chat.id, "–ê–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Ç—É—Ç: https://t.me/MiningMcAfee")

@bot.message_handler(func=lambda message: message.text=="üéÅ–†–æ–∑—ã–≥—Ä—ã—à BTC")
def btc(message):
    bot.send_message(message.chat.id, "üéÅ–†–æ–∑—ã–≥—Ä—ã—à BTC")
    
def wallet_change(message):
    if _update(message.from_user.id,"eth_addr",message.text) != False:
        bot.send_message(message.chat.id, "–ö–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
    else:
        bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:(\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–æ–≤–∞")
    
@bot.message_handler(func=lambda message: message.text=="ü§ù –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ")
def takepart(message):
    keyboard = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(text="–ú–æ–¥–µ–ª—å üÖ∞Ô∏è", callback_data=str(message.chat.id) + "_modelA_0")
    btn1= types.InlineKeyboardButton(text="–ú–æ–¥–µ–ª—å üÖ±Ô∏è", callback_data=str(message.chat.id) +"_modelB_")
    keyboard.row(btn,btn1)
    bot.send_message(message.chat.id, """–£ –Ω–∞—Å –µ—Å—Ç—å 2 —Ñ–æ—Ä–º–∞—Ç–∞ —É—á–∞—Å—Ç–∏—è –≤ –Ω–∞—à–µ–º ICO –∫–ª—É–±–µ:
 
–ú–æ–¥–µ–ª—å üÖ∞Ô∏è ‚Äì —É—á–∞—Å—Ç–∏–µ –≤ –ø—É–ª–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∑–∞—è–≤–ª–µ–Ω–Ω–æ–µ ICO.
–í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤—Å–µ–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∏ –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã—Ö –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤.
–ö–æ–º–∏—Å—Å–∏—è –∫–ª—É–±–∞: 5-15%

–ú–æ–¥–µ–ª—å üÖ±Ô∏è ‚Äì —É—á–∞—Å—Ç–∏–µ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö (3-5) –ø—Ä–æ–µ–∫—Ç–∞—Ö –Ω–∞ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∫–ª—É–±–∞.
–£—á–∞—Å—Ç–Ω–∏–∫—É –Ω–µ –Ω—É–∂–Ω–æ –∑–∞–º–æ—Ä–∞—á–∏–≤–∞—Ç—å—Å—è –∏ —Ç—Ä–∞—Ç–∏—Ç—å —Å–≤–æ–µ –≤—Ä–µ–º—è –Ω–∞ –≤—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ—á–µ–µ.
–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ –∑–∞ –≤–∞—Å. –ü—Ä–æ–µ–∫—Ç—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 1-2 –º–µ—Å—è—Ü–µ–≤.
–ö–æ–º–∏—Å—Å–∏—è –∫–ª—É–±–∞: 8%
 
–í—ã–±–µ—Ä–∏ —Å–≤–æ—é –º–æ–¥–µ–ª—å —É—á–∞—Å—Ç–∏—è:""",reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text=="üèÜ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–ª—É–±–∞")
def advantages(message):
    bot.send_message(message.chat.id, """‚ö´Ô∏è –ß—Ç–æ –º—ã –í–∞–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º?
    –ú—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞–µ–º —Å–∫–ª–∞–¥—á–∏–Ω—ã –¥–ª—è Pre-Sale –∏ ICO.

    Pre-Sale ‚Äì —ç—Ç–æ —Å–∞–º–∞—è —Ä–∞–Ω–Ω—è—è —Å—Ç–∞–¥–∏—è –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–∫–µ–Ω–æ–≤ –≤ –Ω–æ–≤–æ–º –ø—Ä–æ–µ–∫—Ç–µ (–ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–¥ ICO –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ).

    –û—Ç–ª–∏—á–∞–µ—Ç—Å—è —Ç–µ–º, —á—Ç–æ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä—ã —Å –∫—Ä—É–ø–Ω—ã–º–∏ –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 20 ETH –∏ –±–æ–ª–µ–µ), –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞—Ä–∞–Ω–µ–µ —Ä–µ–∑–µ—Ä–≤–∏—Ä—É—é—Ç—Å—è —Ç–æ–∫–µ–Ω—ã.

    –ë–µ–∑ —Å–∫–ª–∞–¥—á–∏–Ω—ã, –∫–∞–∂–¥–æ–º—É –∏–∑ –Ω–∏—Ö –ø—Ä–∏—à–ª–æ—Å—å –±—ã –≤–ª–æ–∂–∏—Ç—å –¥–æ–≤–æ–ª—å–Ω–æ –∫—Ä—É–ø–Ω—É—é —Å—É–º–º—É.

    –¢–æ–≥–¥–∞ –∫–∞–∫ —Å–æ–≤–º–µ—Å—Ç–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ –¥–µ–ª–∞–µ—Ç –ø–æ—Ä–æ–≥ –≤—Ö–æ–¥–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º, –∞ —Ä–∏—Å–∫–∏ –Ω–µ—É–¥–∞—á–∏ –ø–æ–∫—Ä—ã–≤–∞—é—Ç—Å—è –∑–∞ —Å—á–µ—Ç –∫—Ä—É–ø–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤ –Ω–∞ Pre-Sale.

    ‚ö´Ô∏è –ü–æ—á–µ–º—É —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–∫–ª–∞–¥—á–∏–Ω–µ –Ω–∞ Pre-Sale –≤—ã–≥–æ–¥–Ω–æ?

    ‚úîÔ∏è –ë–æ–Ω—É—Å –Ω–∞ —Ç–æ–∫–µ–Ω—ã –¥–æ 70% (% –±–æ–Ω—É—Å–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤)
    ‚úîÔ∏è –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Whitelist, KYC –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —É—á–∞—Å—Ç–∏—è.
    ‚úîÔ∏è –î–ª—è Pre-Sale –≤—Å–µ–≥–¥–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ—Ç—Å—è –∫—Ä—É–ø–Ω—ã–π –æ–±—ä—ë–º —Ç–æ–∫–µ–Ω–æ–≤.
    ‚úîÔ∏è –í–∞—à–∞ –ø–æ–∫—É–ø–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω–∞.
    ‚úîÔ∏è –° –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –≤—ã —Ä–∏—Å–∫—É–µ—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–π —Å—É–º–º–æ–π, —Å –Ω–µ–π –Ω–µ–ª—å–∑—è —Å–∞–º–æ–º—É —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ Pre-Sale.
    ‚úîÔ∏è –ù–æ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–ª–æ–∂–∏—Ç—å –±–æ–ª—å—à—É—é —Å—É–º–º—É, —á–µ–º –¥–∞—é—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º –ø—Ä–∏ –ø—É–±–ª–∏—á–Ω–æ–π —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–µ —Ç–æ–∫–µ–Ω–æ–≤, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è –ø—É–±–ª–∏—á–Ω—ã—Ö —Ä–∞—Å–ø—Ä–æ–¥–∞–∂ ‚Äì —É–º–µ–Ω—å—à–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—é.

    –ù–∞ —Å—Ç–∞–¥–∏–∏ ICO –∏—Ö –≤–∞–º –º–æ–∂–µ—Ç –Ω–µ —Ö–≤–∞—Ç–∏—Ç—å –∏–ª–∏ –Ω–µ —É—Å–ø–µ–µ—Ç–µ –∫—É–ø–∏—Ç—å –∏–∑-–∑–∞ –Ω–µ–±–æ–ª—å—à–æ–≥–æ Hard Cap –∏ –≤—ã—Å–æ–∫–æ–≥–æ —Ö–∞–π–ø–∞.

    –¢–∞–∫–∂–µ –í—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤, –æ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —Ç–µ–º, –∫—Ç–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–µ—Ç.
    –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–µ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∫–ª–∞–¥—á–∏–Ω–∞, –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –∏–∑ <a href="http://telegra.ph/Kak-kupit-tokeny-po-samoj-nizkoj-cene-na-stadii-Pre-Sale-i-poluchit-samye-bolshie-bonusy-03-06-2">—Å—Ç–∞—Ç—å–∏</a>""",parse_mode="HTML")
@bot.message_handler(func=lambda message: message.text=="üìà–¢–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
def trade(message):
    keyboard = types.ReplyKeyboardMarkup()
    btn = types.InlineKeyboardButton(text="ü§ù –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è!")
    btn1= types.InlineKeyboardButton(text="üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–≥–Ω–∞–ª–æ–≤")
    keyboard.row(btn,btn1)
    btn2= types.InlineKeyboardButton(text="‚ÅâÔ∏è –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã")
    btn3= types.InlineKeyboardButton(text="üìñ –û—Ç–∑—ã–≤—ã")
    keyboard.row(btn2,btn3)
    btn4= types.InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    btn5= types.InlineKeyboardButton(text="ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞")
    keyboard.row(btn4,btn5)
    bot.send_message(message.chat.id, "üìà–¢–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", reply_markup=keyboard)
    
@bot.message_handler(func=lambda message: message.text=="üéÅ–†–æ–∑—ã–≥—Ä—ã—à BTC")
def btc(message):
    bot.send_message(message.chat.id, "üéÅ–†–æ–∑—ã–≥—Ä—ã—à BTC")
    
@bot.message_handler(func=lambda message: message.text=="üìñ–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π")
def DB(message):
    bot.send_message(message.chat.id, """üìö –ü—Ä–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –≤–æ –≤—Å–µ—Ö –∏—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è—Ö –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π –Ω–∞–ø–∏—Å–∞–Ω–æ —É–∂–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ü–æ—ç—Ç–æ–º—É –¥–ª—è –≤–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ —è –æ–±—ä–µ–¥–∏–Ω–∏–ª –µ–≥–æ –≤–µ—Å—å –≤–æ –≤—Å–µ–æ–±—ä–µ–º–ª—é—â—É—é –ë–∞–∑—É –ó–Ω–∞–Ω–∏–π. 

http://telegra.ph/Biblioteka-znanij-ot-Dzhona-Makafi-04-04-2

üîù –í –Ω–µ–π —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ-–≤—Å–µ —Å—Ç–∞—Ç—å–∏ –ø–æ —Å–∞–º—ã–º —Ä–∞–∑–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º - —Ç—Ä–µ–π–¥–∏–Ω–≥, ICO, –∞–Ω–∞–ª–∏–∑, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–æ–Ω–∫–æ—Å—Ç–∏ –∏ —Ç.–¥.. –≠—Ç–∞ –ë–∞–∑–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞ —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–µ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞.

–ß–∏—Ç–∞–π—Ç–µ, –ø—Ä–æ–∫–∞—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –∏ –¥–µ–ª–∞–π—Ç–µ –∏–∫—Å—ã!""")
    
@bot.message_handler(func=lambda message: message.text=="üíµ–ü–æ–∫—É–ø–∫–∞ BTC")
def trade_btc(message):
    keyboard = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É!",callback_data=str(message.chat.id)+"_trade_"+str(message.from_user.username))
    keyboard.row(btn)
    bot.send_message(message.chat.id, """–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —É—Å–ª—É–≥–∏ –≤ –ú–æ—Å–∫–≤–µ –ø–æ:

#–û–ë–ú–ï–ù –ª—é–±—ã–µ –æ–±—ä–µ–º—ã (–æ—Ç 1 –¥–æ 1000 BTC).
üíµüëâüèºüåïUSD/BTC | RUB/BTC
üåïüëâüèºüíµBTC/USD | BTC/RUB

üíπ Bitstamp/Bitfinex
üè¶ –°–¥–µ–ª–∫–∏ –≤ –æ—Ñ–∏—Å–µ/–±–∞–Ω–∫–µ
üî• –†–∞–±–æ—Ç–∞–µ–º —Å –±–µ–∑–Ω–∞–ª–æ–º 

üí∞ –û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É:""",reply_markup=keyboard)
    
@bot.message_handler(commands=['change'])
def change(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ETH –∫–æ—à–µ–ª–µ–∫")
    bot.register_next_step_handler(message,wallet_change)

def syka(call,_id,name):
    user = Payment()
    user_dict[_id] = user
    user_dict[_id]._id = _id
    user_dict[_id].name = name
    bot.send_message(_id,'–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!')
    bot.send_message(_id,'–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ETH, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –≤–ª–æ–∂–∏—Ç—å:')
    bot.register_next_step_callback(call,pizdec)
    
def pizdec(message):
    try:
        var = float(message.text)
        user_dict[str(message.chat.id)].value = var
        keyboard = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=str(message.chat.id)+ "_icoinvest_")
        keyboard.row(btn)
        bot.send_message(message.chat.id,'–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ ' + str(user_dict[str(message.chat.id)].value) + ' ETH –Ω–∞ —Å—á–µ—Ç ' + str(user_dict[str(message.chat.id)].name),reply_markup=keyboard) 
    except ValueError:
        bot.send_message(message.chat.id,'–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø—É —Å–Ω–æ–≤–∞')
        
def modelB(message):
    try:
        var = float(message.text)
        keyboard = types.InlineKeyboardMarkup()
        user = Payment()
        user_dict[str(message.from_user.id)] = user
        user_dict[str(message.from_user.id)]._id = message.chat.id
        user_dict[str(message.chat.id)].value = var
        btn = types.InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=str(message.chat.id)+ "_icoinvest_modelB")
        keyboard.row(btn)
        bot.send_message(message.chat.id,'–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ ' + str(user_dict[str(message.chat.id)].value)+' ETH',reply_markup=keyboard)
    except ValueError:
        bot.send_message(message.chat.id,'–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø—É —Å–Ω–æ–≤–∞')
        
def question(message):
    db.answer.insert_one({"username":message.from_user.username,"question":message.text})
    bot.send_message(message.chat.id, "Ô∏è–í–∞—à –≤–æ–ø—Ä–æ—Å –Ω–∞–ø—Ä–∞–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è")
    
def transferFrom_step3(call,name):
    transfer = transferFrom()
    tr_dict[call.from_user.id] = transfer
    tr_dict[call.from_user.id].name = name
    bot.send_message(call.from_user.id, "Ô∏è–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –¥–µ–Ω—å–≥–∏ (–í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö)")
    bot.register_next_step_callback(call,transferFrom_step4)
def transferFrom_step4(message):
    tr_dict[message.from_user.id].addr = message.text
    bot.send_message(message.chat.id, "Ô∏è–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ (%s –¥–æ—Å—Ç—É–ø–Ω–æ)" % get_ico_money(tr_dict[message.from_user.id].name))
    bot.register_next_step_handler(message,transferFrom_step5)
def transferFrom_step5(message):
    try:
        tr_dict[message.from_user.id].value = float(message.text)
        if transfer_from_ico(tr_dict[message.from_user.id].name,tr_dict[message.from_user.id].addr,tr_dict[message.from_user.id].value) != False:
            bot.send_message(message.chat.id, "Ô∏è–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
        else:
            bot.send_message(message.chat.id, "Ô∏è–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
    except Exception as e:
        print(e)
        bot.send_message(message.chat.id, "Ô∏è–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
    
@bot.callback_query_handler(func=lambda call: True)
def callbacks(call):
    keyboard = types.InlineKeyboardMarkup()
    data = db.user.find_one({"id":int(call.from_user.id)})
    s = call.data.split("_")
    if s[1] == "eth":
        if data['eth_addr'] == None:
            bot.send_message(s[0], "üí≥ –£ –í–∞—Å –Ω–µ –∑–∞–¥–∞–Ω ETH –∞–¥—Ä–µ—Å")
        else:
            bot.send_message(s[0], "üí≥ –í–∞—à —Ç–µ–∫—É—â–∏–π –∞–¥—Ä–µ—Å: %s" % data['eth_addr'])
        bot.send_message(s[0], "Ô∏è‚ùï –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫–æ–º–∞–Ω–¥–æ–π: /change")
        bot.send_message(s[0], "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ù–ï –≤–≤–æ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –±–∏—Ä–∂–µ–≤–æ–≥–æ ETH –∫–æ—à–µ–ª—å–∫–∞")
    elif s[1] == "admin":
        bot.send_message(s[0], "–†–∞–∑–¥–µ–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",reply_markup=admin(call.from_user.id))
    elif s[1] == "modelA":
        icos = db.ico.find({'locked':True})
        print(icos.count())
        if icos.count() == 0:
            bot.send_message(s[0], "–°–µ–π—á–∞—Å –≤–µ–¥–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –∏ –≤—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤. –°–∫–æ—Ä–æ –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –ø–æ—è–≤—è—Ç—Å—è –±–ª–∏–∂–∞–π—à–∏–µ —Å–∫–ª–∞–¥—á–∏–Ω—ã.",reply_markup=keyboard)
        else:
            for i in icos[int(s[2]):int(s[2])+5]:
                if i['ico'] != "modelB":
                    keyboard.add(types.InlineKeyboardButton(text="‚úÖ "+i['ico'],callback_data=s[0]+"_"+i['ico']+"_invest"))
            keyboard.add(types.InlineKeyboardButton(text="–î–∞–ª—å—à–µ ‚è©",callback_data=s[0]+"_modelA_"+str(int(s[2])+5)))
            bot.send_message(s[0], "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤",reply_markup=keyboard)
    elif s[1] == "subscr":
        if s[2] == "2":
            bot.send_message(s[0],"""–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 2—Ö –Ω–µ–¥–µ–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ—à–ª–∏—Ç–µ 
0.19 ETH (–±–µ–∑ —É—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–π) –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É:

0x264368C1D36d08715053D235426532d2177dDFd3

‚úÖ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∏ –≤—ã –Ω–∞—á–Ω–µ—Ç–µ 
–ø–æ–ª—É—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞.

üôè –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.""")
        elif s[2] == "1":
            bot.send_message(s[0],"""–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–µ—Å—è—á–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ—à–ª–∏—Ç–µ 
0.3 ETH (–±–µ–∑ —É—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–π) –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É:

0x264368C1D36d08715053D235426532d2177dDFd3

‚úÖ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∏ –≤—ã –Ω–∞—á–Ω–µ—Ç–µ 
–ø–æ–ª—É—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞.

üôè –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.""")
        elif s[2] == "6":
            bot.send_message(s[0],"""–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 6 –º–µ—Å—è—á–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ—à–ª–∏—Ç–µ 
1.8 ETH (–±–µ–∑ —É—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–π) –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É:

0x264368C1D36d08715053D235426532d2177dDFd3

‚úÖ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∏ –≤—ã –Ω–∞—á–Ω–µ—Ç–µ 
–ø–æ–ª—É—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞.

üôè –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.""")
        elif s[2] == "inf":
            bot.send_message(s[0],"""–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ—à–ª–∏—Ç–µ 
2.5 ETH (–±–µ–∑ —É—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–π) –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É:

0x264368C1D36d08715053D235426532d2177dDFd3

‚úÖ –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∏ –≤—ã –Ω–∞—á–Ω–µ—Ç–µ 
–ø–æ–ª—É—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞.

üôè –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.""")
    elif s[1] == "modelB":
        bot.send_message(s[0], 'üí≥ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ETH, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å.\n–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–¥–µ–ª–∞–µ—Ç —Å–∞–º—ã–µ –≤—ã–≥–æ–¥–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è!')
        bot.register_next_step_callback(call,modelB)
    elif s[1] == "deposit":
        bot.send_message(s[0], "–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –í–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞")
        bot.send_message(s[0], "–î–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–µ—à–ª–∏—Ç–µ ETH –Ω–∞ –í–∞—à –ª–∏—á–Ω—ã–π –∫–æ—à–µ–ª–µ–∫:")
        bot.send_message(s[0], str(get_deposit_addr(call.from_user.id)))
    elif s[1] == "q":
        if s[2] == "1":
            bot.send_message(s[0],"""*–ü–æ—á–µ–º—É –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å—Ç–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç?*
–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ–º—É —Ü–µ–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –¥–ª—è —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–µ –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–∏–≥–Ω–∞–ª–æ–≤, –∞ –≤ –∏—Ö –∫–∞—á–µ—Å—Ç–≤–µ

–ü—Ä–µ–∂–¥–µ —á–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ–ø–∞–¥–∞–µ—Ç –∫ –≤–∞–º –æ–Ω–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞, –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ –∏–Ω—Å–∞–π–¥–µ—Ä—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π

–ú–Ω–æ–≥–∏–µ –∫–∞–Ω–∞–ª—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂—É –∏ –ø–µ—Ä–µ–ø–æ—Å—Ç —á—É–∂–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π. –û—Ç—Å—é–¥–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∏ —Ü–µ–Ω–∞. –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å —á—É–∂–∏–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏ –≤–∞—Å –ø—Ä–æ—Å—Ç–æ –∑–∞–≤–∞–ª—è—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –±–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∏—Å–∫- –∏ –º–∞–Ω–∏–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞.""",parse_mode="Markdown")
        elif s[2] == "2":
            bot.send_message(s[0],"""*–ö–∞–∫ —è –º–æ–≥—É –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω —á—Ç–æ –≤—ã –Ω–µ –º–æ—à–µ–Ω–Ω–∏–∫–∏?*
–ú—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º —Ç–æ—Ä–≥–æ–≤—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É–∂–µ –±–æ–ª–µ–µ 1 –≥–æ–¥–∞ –∏ –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–∞—à–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –ø–æ–ª—É—á–∏–ª–∏ —Ö–æ—Ä–æ—à–∏–π –ø—Ä–æ—Ñ–∏—Ç. –ú—ã —Ç–∞–∫–∂–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º —Ç–æ—Ä–≥–æ–≤–ª—é –ø–æ —ç—Ç–∏–º —Å–∏–≥–Ω–∞–ª–∞–º, –ø–æ—ç—Ç–æ–º—É –º—ã –Ω–µ –º–æ–∂–µ–º –¥–∞–≤–∞—Ç—å –≤–∞–º –ª–æ–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ù–∞—à–∞ —Ä–∞–±–æ—Ç–∞ —Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏  –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π —Å –Ω–∞—à–∏–º–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏. –¢–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –æ—Ç–∑—ã–≤–∞–º–∏ –æ –Ω–∞—Å.""",parse_mode="Markdown")
        elif s[2] == "3":
            bot.send_message(s[0],"""*–°–∫–æ–ª—å–∫–æ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ?*
–í —Å—Ä–µ–¥–Ω–µ–º —É –Ω–∞—Å –≤—ã—Ö–æ–¥–∏—Ç 1-7 —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –¥–µ–Ω—å. –ù–æ –±—ã–≤–∞—é—Ç –¥–Ω–∏ –∫–æ–≥–¥–∞ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å –±–æ–ª—å—à–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –∏–ª–∏ –≤–æ–æ–±—â–µ –Ω–∏ –æ–¥–Ω–æ–≥–æ. –î–ª—è –Ω–∞—Å –≥–ª–∞–≤–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
–ö –∫–∞–∂–¥–æ–º—É —Å–∏–≥–Ω–∞–ª—É –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–æ–ø –ª–æ—Å—Å, —Ç–µ–π–∫ –ø—Ä–æ—Ñ–∏—Ç –∏ –æ–±—ä–µ–º —Å—Ä–µ–¥—Å—Ç–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. 
–ö–∞–∂–¥—ã–π —Å–∏–≥–Ω–∞–ª –≤ —Å—Ä–µ–¥–Ω–µ–º –ø—Ä–∏–Ω–æ—Å–∏—Ç 5-40% –ø—Ä–∏–±—ã–ª–∏.""",parse_mode="Markdown")
        elif s[2] == "4":
            bot.send_message(s[0],"""*–ß—Ç–æ –µ—Å–ª–∏ —è –Ω–µ –º–æ–≥—É —Å–µ–±–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?*
–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å ‚Äú—Å–∫–ª–∞–¥—á–∏–Ω—É‚Äù. –£ –Ω–∞—Å –Ω–µ—Ç –ø–æ —ç—Ç–æ–º—É –ø–æ–≤–æ–¥—É –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –≥–ª–∞–≤–Ω–æ–µ —á—Ç–æ–±—ã –≤—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º. –ó–∞ —ç—Ç–æ —É –Ω–∞—Å –±–∞–Ω)""",parse_mode="Markdown")
        elif s[2] == "5":
            bot.send_message(s[0],"""*–ù–∞ –∫–∞–∫–æ–π –±–∏—Ä–∂–µ —è –¥–æ–ª–∂–µ–Ω —Ç–æ—Ä–≥–æ–≤–∞—Ç—å? *
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –Ω–∞ –±–∏—Ä–∂–∞—Ö Binance, Bittrex  –∏ Poloniex. –ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å —Å–∏–≥–Ω–∞–ª–æ–≤ –ø—Ä–æ—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –Ω–∞ Binance.""",parse_mode="Markdown")
        elif s[2] == "6":
            bot.send_message(s[0],"""*–ù–∞ —á–µ–º –≤—ã –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç–µ —Å–≤–æ–∏ —Å–∏–≥–Ω–∞–ª—ã?*
–°–∏–≥–Ω–∞–ª—ã –≤ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –¥–æ—Ä–æ–≥–æ–π –∏–Ω—Å–∞–π–¥–µ—Ä—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏–∑ –ö–æ—Ä–µ–∏ –∏ –°–®–ê. –¢–∞–∫ –∂–µ —á–∞—Å—Ç—å —Å–∏–≥–Ω–∞–ª–æ–≤ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞—à–∏–º –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–º —Ü–µ–Ω—Ç—Ä–æ–º""",parse_mode="Markdown")
        elif s[2] == "7":
            bot.send_message(s[0],"""–í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∞—à–∏–º –∞–¥–º–∏–Ω–∞–º –∏ –∑–∞–¥–∞—Ç—å –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å.
–î–ª—è –Ω–∞—Å –≤–∞–∂–µ–Ω –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ—ç—Ç–æ–º—É –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ.
@razdva34 @Uji_y @VivereEstVincere""")
    elif s[1] == "history":
        bot.send_message(s[0], "Ô∏èüìó –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:")
        for i in data['operations'][-5:]:
            if i['op'] == 'contribute':
                bot.send_message(s[0],"*" + str(i['timestamp']).split('.')[0]+"*",parse_mode="Markdown")
                bot.send_message(s[0],"–í—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏ "+str(i['eth'])+" ETH –≤ "+i['ico'])
            elif i['op'] == 'create_user':
                bot.send_message(s[0],"*"+str(i['timestamp'].split('.')[0])+"*",parse_mode="Markdown")
                bot.send_message(s[0], "–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
            elif i['op'] == "expert":
                bot.send_message(s[0],"*"+str(i['timestamp'].split('.')[0])+"*",parse_mode="Markdown")
                bot.send_message(s[0], "–ü–æ–ª—É—á–µ–Ω –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤")
    elif s[1] == "access":
        btn = types.InlineKeyboardButton(text="1 –º–µ—Å—è—Ü",callback_data=s[0]+"_chat_month")
        btn1 = types.InlineKeyboardButton(text="3 –º–µ—Å—è—Ü–∞",callback_data=s[0]+"_chat_3month")
        btn2 = types.InlineKeyboardButton(text="1 –≥–æ–¥",callback_data=s[0]+"_chat_year")
        btn3 = types.InlineKeyboardButton(text="–ù–∞–≤—Å–µ–≥–¥–∞",callback_data=s[0]+"_chat_forever")
        keyboard.row(btn,btn1)
        keyboard.row(btn2,btn3)
        bot.send_message(s[0], '''–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω''',reply_markup=keyboard)
    elif s[1] == "icoinvest":
        try:
            if s[2] == "modelB":
                if contribute(int(user_dict[str(call.from_user.id)]._id),"modelB",user_dict[str(call.from_user.id)].value) != False:
                    bot.send_message(s[0], "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
                    if data['is_expert'] == False:
                        time = str(datetime.date.today() + datetime.timedelta(days=31))
                        db.user.update_one({'id':call.from_user.id}, {'$set':{'is_expert': time}})
                        btn = types.InlineKeyboardButton(text="–ß–∞—Ç",url='https://habrahabr.ru')
                        keyboard.row(btn)
                        bot.send_message(s[0], "üéÅ –í –ø–æ–¥–∞—Ä–æ–∫ –≤–∞–º –¥–∞–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø –Ω–∞ 1 –º–µ—Å—è—Ü –∫ –ü—Ä–∏–≤–∞—Ç–Ω–æ–º—É —á–∞—Ç—É —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ Private Crypto.",reply_markup=keyboard)
                else:
                    bot.send_message(s[0], "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª–∞:(")
            else:
                if contribute(int(user_dict[str(call.from_user.id)]._id),user_dict[str(call.from_user.id)].name,user_dict[str(call.from_user.id)].value) != False:
                    bot.send_message(s[0], "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
                else:
                    bot.send_message(s[0], "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–ª–∏—à–∫–æ–º –º–∞–ª–∞:(")
        except:
            bot.send_message(s[0], "–£–ø—Å... –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞\n–ü—Ä–æ—Å—Ç–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–æ :(")
    elif s[1] == "getcontr":
        if get_contributors(s[2]) ==[]:
            bot.send_message(s[0], '–ï—â–µ –Ω–µ—Ç –≤–ª–æ–∂–µ–Ω–∏–π')
        for i in get_contributors(s[2]):
            try:
                bot.send_message(s[0], '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ' + i[0] + ' –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª –≤ ' + i[2]['ico'] + ' ' + str(i[2]['eth']) + ' ETH')
                bot.send_message(s[0], '–ï–≥–æ –ª–∏—á–Ω—ã–π ETH_address: ' + str(i[1]))
                bot.send_message(s[0], 'TX HASH: ' + i[2]['tx_hash'])
            except:
                pass
    elif s[1] == "transferfrom":
        transferFrom_step3(call,s[2])
    elif s[1] == "icobalance":
        bot.send_message(s[0],"–ë–∞–ª–∞–Ω—Å "+str(get_ico_money(s[2]))+" ETH")
    elif s[1] == "lockico":
        change_lock(s[2])
        bot.send_message(s[0], "–£—Å–ø–µ—à–Ω–æ")
    elif s[1] == "answer":
        bot.send_message(s[0],"–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "+"@"+ str(s[2]))
        db.answer.delete_one({'username': str(s[2])})
    elif s[1] == "chat":
        if get_expert(call.from_user.id,s[2]) != False:
            btn = types.InlineKeyboardButton(text="–ß–∞—Ç",url='https://habrahabr.ru')
            keyboard.row(btn)
            bot.send_message(s[0], "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",reply_markup=keyboard)
        else:
            bot.send_message(s[0], "–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á–µ—Ç—É:(\n–ö–æ—à–µ–ª–µ–∫ –º–æ–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ")
    elif s[1] == "question":
        bot.send_message(s[0], "–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å")
        bot.register_next_step_callback(call,question)
    elif s[2] == "invest":
        key = types.InlineKeyboardMarkup()
        i = db.ico.find_one({"ico":s[1]})
        key.add(types.InlineKeyboardButton(text="üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å",callback_data=s[0]+"_"+i['ico']+"_investstep2"))
        bot.send_message(s[0],'–ù–∞–∑–≤–∞–Ω–∏–µ ICO: '+i['ico'])
        bot.send_message(s[0],'–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: '+i['description'])
        bot.send_message(s[0],'–•–æ—Ç–∏—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –¥–∞–Ω–Ω–æ–µ ICO? –ù–∞–∂–º–∏—Ç–µ "–∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å"!',reply_markup=key)
    elif s[2] == "investstep2":
        syka(call,s[0],s[1])
        
#---------------------------

bot.remove_webhook()
bot.set_webhook(url=WEBHOOK_URL_BASE + WEBHOOK_URL_PATH,
                certificate=open(WEBHOOK_SSL_CERT, 'r'))

cherrypy.config.update({
    'server.socket_host': WEBHOOK_LISTEN,
    'server.socket_port': WEBHOOK_PORT,
    'server.ssl_module': 'builtin',
    'server.ssl_certificate': WEBHOOK_SSL_CERT,
    'server.ssl_private_key': WEBHOOK_SSL_PRIV
})
cherrypy.quickstart(WebhookServer(), WEBHOOK_URL_PATH, {'/': {}})
